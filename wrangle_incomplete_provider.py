import xlrd, requests
book = xlrd.open_workbook("scratch/c.xls")
sh = book.sheet_by_index(4)
sh2 = book.sheet_by_index(5)

for rx in range(sh.nrows):
    if rx < 14:
        continue

    row = sh.row(rx)
    row2 = sh2.row(rx)
    post_data = {
        'year': 2017,
        'month': 3,
        'region_code': str(row[1].value),
        'ccg_code': str(row[2].value),
        'ccg_name': str(row[3].value),
        'treatment_function_code': str(row[4].value),
        'treatment_function_name': str(row[5].value),
        'total_incomplete': int(row[59].value),
        'total_within_18': int(row[60].value),
        'total_with_dta': int(row2[59].value),

        'total_waiting_1': int(row[6].value),
        'total_waiting_2': int(row[7].value),
        'total_waiting_3': int(row[8].value),
        'total_waiting_4': int(row[9].value),
        'total_waiting_5': int(row[10].value),
        'total_waiting_6': int(row[11].value),
        'total_waiting_7': int(row[12].value),
        'total_waiting_8': int(row[13].value),
        'total_waiting_9': int(row[14].value),
        'total_waiting_10': int(row[15].value),
        'total_waiting_11': int(row[16].value),
        'total_waiting_12': int(row[17].value),
        'total_waiting_13': int(row[18].value),
        'total_waiting_14': int(row[19].value),
        'total_waiting_15': int(row[20].value),
        'total_waiting_16': int(row[21].value),
        'total_waiting_17': int(row[22].value),
        'total_waiting_18': int(row[23].value),
        'total_waiting_19': int(row[24].value),
        'total_waiting_20': int(row[25].value),
        'total_waiting_21': int(row[26].value),
        'total_waiting_22': int(row[27].value),
        'total_waiting_23': int(row[28].value),
        'total_waiting_24': int(row[29].value),
        'total_waiting_25': int(row[30].value),
        'total_waiting_26': int(row[31].value),
        'total_waiting_27': int(row[32].value),
        'total_waiting_28': int(row[33].value),
        'total_waiting_29': int(row[34].value),
        'total_waiting_30': int(row[35].value),
        'total_waiting_31': int(row[36].value),
        'total_waiting_32': int(row[37].value),
        'total_waiting_33': int(row[38].value),
        'total_waiting_34': int(row[39].value),
        'total_waiting_35': int(row[40].value),
        'total_waiting_36': int(row[41].value),
        'total_waiting_37': int(row[42].value),
        'total_waiting_38': int(row[43].value),
        'total_waiting_39': int(row[44].value),
        'total_waiting_40': int(row[45].value),
        'total_waiting_41': int(row[46].value),
        'total_waiting_42': int(row[47].value),
        'total_waiting_43': int(row[48].value),
        'total_waiting_44': int(row[49].value),
        'total_waiting_45': int(row[50].value),
        'total_waiting_46': int(row[51].value),
        'total_waiting_47': int(row[52].value),
        'total_waiting_48': int(row[53].value),
        'total_waiting_49': int(row[54].value),
        'total_waiting_50': int(row[55].value),
        'total_waiting_51': int(row[56].value),
        'total_waiting_52': int(row[57].value),
        'total_waiting_52_plus': int(row[58].value),

        'total_with_dta_1': int(row2[6].value),
        'total_with_dta_2': int(row2[7].value),
        'total_with_dta_3': int(row2[8].value),
        'total_with_dta_4': int(row2[9].value),
        'total_with_dta_5': int(row2[10].value),
        'total_with_dta_6': int(row2[11].value),
        'total_with_dta_7': int(row2[12].value),
        'total_with_dta_8': int(row2[13].value),
        'total_with_dta_9': int(row2[14].value),
        'total_with_dta_10': int(row2[15].value),
        'total_with_dta_11': int(row2[16].value),
        'total_with_dta_12': int(row2[17].value),
        'total_with_dta_13': int(row2[18].value),
        'total_with_dta_14': int(row2[19].value),
        'total_with_dta_15': int(row2[20].value),
        'total_with_dta_16': int(row2[21].value),
        'total_with_dta_17': int(row2[22].value),
        'total_with_dta_18': int(row2[23].value),
        'total_with_dta_19': int(row2[24].value),
        'total_with_dta_20': int(row2[25].value),
        'total_with_dta_21': int(row2[26].value),
        'total_with_dta_22': int(row2[27].value),
        'total_with_dta_23': int(row2[28].value),
        'total_with_dta_24': int(row2[29].value),
        'total_with_dta_25': int(row2[30].value),
        'total_with_dta_26': int(row2[31].value),
        'total_with_dta_27': int(row2[32].value),
        'total_with_dta_28': int(row2[33].value),
        'total_with_dta_29': int(row2[34].value),
        'total_with_dta_30': int(row2[35].value),
        'total_with_dta_31': int(row2[36].value),
        'total_with_dta_32': int(row2[37].value),
        'total_with_dta_33': int(row2[38].value),
        'total_with_dta_34': int(row2[39].value),
        'total_with_dta_35': int(row2[40].value),
        'total_with_dta_36': int(row2[41].value),
        'total_with_dta_37': int(row2[42].value),
        'total_with_dta_38': int(row2[43].value),
        'total_with_dta_39': int(row2[44].value),
        'total_with_dta_40': int(row2[45].value),
        'total_with_dta_41': int(row2[46].value),
        'total_with_dta_42': int(row2[47].value),
        'total_with_dta_43': int(row2[48].value),
        'total_with_dta_44': int(row2[49].value),
        'total_with_dta_45': int(row2[50].value),
        'total_with_dta_46': int(row2[51].value),
        'total_with_dta_47': int(row2[52].value),
        'total_with_dta_48': int(row2[53].value),
        'total_with_dta_49': int(row2[54].value),
        'total_with_dta_50': int(row2[55].value),
        'total_with_dta_51': int(row2[56].value),
        'total_with_dta_52': int(row2[57].value),
        'total_with_dta_52_plus': int(row2[58].value),
    }
    #print(post_data)
    #r = requests.post("https://guarded-gorge-97269.herokuapp.com/api/incomplete-commissioner", json=post_data)
    #print(r.text)



